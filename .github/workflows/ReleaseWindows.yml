# This is a basic workflow to help you get started with Actions

name: Build Binary Release Windows x64

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.14.2'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2017_64'
          install-deps: 'true'
          cached: 'false'
          setup-python: 'true'
          tools: 'tools_ifw,4.0,qt.tools.ifw.40 tools_qtcreator,4.13.2-0,qt.tools.qtcreator'
          set-env: 'true'
          tools-only: 'false'
          aqtversion: '==0.11.1'
          py7zrversion: '==0.11.3'
          extra: '--external 7z'

      # Runs a single command using the runners shell
      - name: Install CQtDeployer
        run: |
          git clone https://github.com/QuasarApp/CQtDeployer.git
          cd CQtDeployer
          git submodule update --init --recursive
          call "%IQTA_TOOLS%\mingw73_64\bin\qmake.exe" -r
          migw32-make -j8
          migw32-make deploy

